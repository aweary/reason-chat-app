// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var ChatMessage = require("./chatMessage.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

var component = ReasonReact.statefulComponent("MessageList");

function mapMessageToListItem(message) {
  return ReasonReact.element(/* None */0, /* None */0, ChatMessage.make(message, /* array */[]));
}

function make(messages, _) {
  var setMessageRef = function (theRef, _) {
    return /* SilentUpdate */Block.__(1, [/* record */[/* messageRef */theRef === null ? /* None */0 : [theRef]]]);
  };
  var newrecord = component.slice();
  newrecord[/* didUpdate */5] = (function (param) {
      var match = param[/* newSelf */1][/* state */3][/* messageRef */0];
      if (match) {
        var node = match[0];
        node.scrollTop = node.scrollHeight;
        return /* () */0;
      } else {
        return /* () */0;
      }
    });
  newrecord[/* render */9] = (function (self) {
      return React.createElement("div", {
                  ref: Curry._1(self[/* update */2], setMessageRef),
                  className: "chat--container"
                }, React.createElement("ul", {
                      className: "chat--content"
                    }, messages.map(mapMessageToListItem)));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* messageRef : None */0];
    });
  return newrecord;
}

exports.component            = component;
exports.mapMessageToListItem = mapMessageToListItem;
exports.make                 = make;
/* component Not a pure module */
